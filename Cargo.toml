[package]
name = "deno_ast"
version = "0.25.0"
authors = ["the Deno authors"]
documentation = "https://docs.rs/deno_ast"
edition = "2021"
homepage = "https://deno.land/"
license = "MIT"
repository = "https://github.com/denoland/deno_ast"
description = "Source text parsing, lexing, and AST related functionality for Deno"

[package.metadata.docs.rs]
all-features = true

[features]
bundler = ["swc_bundler"]
cjs = ["utils", "visit"]
codegen = ["swc_ecma_codegen", "swc_ecma_codegen_macros"]
compat = ["transforms", "swc_ecma_transforms_compat"]
dep_graph = ["swc_ecma_dep_graph"]
module_specifier = ["deno_media_type/module_specifier", "url", ]
proposal = ["transforms", "swc_ecma_transforms_proposal", "swc_ecma_transforms_classes", "swc_ecma_transforms_macros"]
react = ["transforms", "swc_ecma_transforms_react", "swc_ecma_transforms_macros"]
scopes = ["view", "utils", "visit"]
sourcemap = ["dprint-swc-ext/sourcemap"]
transforms = ["swc_ecma_loader", "swc_ecma_transforms_base"]
transpiling = ["anyhow", "base64", "codegen", "module_specifier", "proposal", "react", "sourcemap", "transforms", "typescript", "utils", "visit"]
typescript = ["transforms", "swc_ecma_transforms_typescript"]
utils = ["swc_ecma_utils"]
view = ["dprint-swc-ext/view"]
visit = ["swc_ecma_visit"]

[dependencies]
anyhow = { version = "1.0.64", optional = true }
base64 = { version = "0.13.1", optional = true }
deno_media_type = { version = "0.1.0", default-features = false }

dprint-swc-ext = "0.8.0"
serde = { version = "1.0.144", features = ["derive"] }
text_lines = { version = "0.6.0", features = ["serialization"] }
url = { version = "2.3.1", features = ["serde"], optional = true }

# swc's version bumping is very buggy and there will often be patch versions
# published that break our build, so we pin all swc versions to prevent
# pulling in new versions of swc crates
swc_atoms = "=0.4.39"
swc_common = "=0.29.37"
swc_ecma_ast = "=0.100.1"
swc_ecma_codegen = { version = "=0.135.2", optional = true }
swc_ecma_codegen_macros = { version = "=0.7.1", optional = true }
swc_ecma_dep_graph = { version = "=0.102.2", optional = true }
swc_ecma_loader = { version = "=0.41.39", optional = true }
swc_ecma_parser = "=0.130.2"
swc_ecma_transforms_base = { version = "=0.122.3", optional = true }
swc_ecma_transforms_classes = { version = "=0.111.3", optional = true }
swc_ecma_transforms_compat = { version = "=0.148.4", optional = true }
swc_ecma_transforms_macros = { version = "=0.5.0", optional = true }
swc_ecma_transforms_proposal = { version = "=0.156.4", optional = true }
swc_ecma_transforms_react = { version = "=0.167.4", optional = true }
swc_ecma_transforms_typescript = { version = "=0.171.4", optional = true }
swc_ecma_utils = { version = "=0.113.3", optional = true }
swc_ecma_visit = { version = "=0.86.1", optional = true }
swc_bundler = { version = "=0.208.4", optional = true }

[dev-dependencies]
pretty_assertions = "1.3.0"
serde_json = { version = "1.0.87", features = ["preserve_order"] }
